docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

vm_executor_image: &vm_executor_image
  machine:
    image: ubuntu-2204:2023.04.2

workspace: &workspace
  at: ~/scriptjar

work_directory: &work_directory
  working_directory: ~/scriptjar

resource_class: &resource_class
  resource_class: small

release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/

orbs:
  templates: devatherock/circleci-templates@0.7.0

parameters:
  repo_name:
    type: string
    default: "scriptjar"

executors:
  jdk-executor:
    docker:
      - image: cimg/openjdk:11.0
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
  machine-executor:
    <<: *vm_executor_image
    resource_class: medium
    <<: *work_directory
  arm-executor:
    <<: *vm_executor_image
    resource_class: arm.medium
    <<: *work_directory

version: 2.1
jobs:
  publish:
    executor: jdk-executor
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          GROOVY_VERSION=3.0.9-jre11
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            --build-arg GROOVY_VERSION=$GROOVY_VERSION \
            -t devatherock/scriptjar:$TAG \
            -t devatherock/scriptjar:latest \
            -f docker/Dockerfile .

  functional_test:
    parameters:
      runner:
        type: executor
    executor: << parameters.runner >>
    steps:
      - checkout
      - attach_workspace:
          <<: *workspace
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          make test
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

  publish_release:
    executor: jdk-executor
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx imagetools create \
            -t devatherock/scriptjar:$TAG devatherock/scriptjar:$DEV_TAG

  fast_functional_test:
    executor: arm-executor
    steps:
      - checkout
      - attach_workspace:
          <<: *workspace
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          make docker-build test skip_pull=true

workflows:
  version: 2.1
  docker_publish:
    jobs:
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          filters:
            branches:
              only: master
      - publish:
          context:
            - docker-credentials
          requires:
            - notify
      - templates/dockerhub_readme_update:
          name: dockerhub_readme
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: '<< pipeline.parameters.repo_name >>'
          image_description: 'CI plugin to convert Groovy scripts to executable jars'
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          requires:
            - publish
      - functional_test:
          name: functional_test_amd
          context:
            - docker-credentials
          runner: machine-executor
          requires:
            - publish
      - functional_test:
          name: functional_test_arm
          context:
            - docker-credentials
          runner: arm-executor
          requires:
            - dockerhub_readme

  release:
    jobs:
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
      - publish_release:
          context:
            - docker-credentials
          <<: *release_filter
          requires:
            - notify

  pr_check:
    jobs:
      - fast_functional_test:
          context:
            - docker-credentials
          filters:
            branches:
              ignore: master
